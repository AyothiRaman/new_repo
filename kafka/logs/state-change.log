[2023-04-20 14:50:20,516] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-21 10:35:11,598] INFO [Controller id=0 epoch=2] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-21 10:42:39,284] INFO [Controller id=0 epoch=2] Changed partition quickstart-events-0 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 10:42:39,285] INFO [Controller id=0 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-21 10:42:39,294] INFO [Controller id=0 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-21 10:42:39,347] INFO [Controller id=0 epoch=2] Changed partition quickstart-events-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 10:42:39,352] INFO [Controller id=0 epoch=2] Sending LeaderAndIsr request to broker 0 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-21 10:42:39,355] INFO [Controller id=0 epoch=2] Sending UpdateMetadata request to brokers HashSet(0) for 1 partitions (state.change.logger)
[2023-04-21 10:42:39,357] INFO [Controller id=0 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-21 10:42:39,365] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 for 1 partitions (state.change.logger)
[2023-04-21 10:42:39,417] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 0 epoch 2 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-04-21 10:42:39,662] INFO [Broker id=0] Leader quickstart-events-0 with topic id Some(i7vwjRyZTie5zpGd0shesw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 10:42:39,708] INFO [Broker id=0] Finished LeaderAndIsr request in 346ms correlationId 1 from controller 0 for 1 partitions (state.change.logger)
[2023-04-21 10:42:39,724] INFO [Broker id=0] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 2 with correlation id 2 (state.change.logger)
[2023-04-21 11:21:52,717] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-21 11:21:52,991] INFO [Controller id=0 epoch=3] Sending LeaderAndIsr request to broker 0 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-21 11:21:52,991] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet(0) for 1 partitions (state.change.logger)
[2023-04-21 11:21:52,992] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 for 1 partitions (state.change.logger)
[2023-04-21 11:21:52,994] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition quickstart-events-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 11:21:52,995] INFO [Broker id=0] Finished LeaderAndIsr request in 3ms correlationId 1 from controller 0 for 1 partitions (state.change.logger)
[2023-04-21 11:21:52,997] INFO [Broker id=0] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 2 (state.change.logger)
[2023-04-21 11:55:22,970] INFO [Controller id=0 epoch=3] Changed partition --quickstart-events-0 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:22,970] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-21 11:55:22,970] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-21 11:55:22,991] INFO [Controller id=0 epoch=3] Changed partition --quickstart-events-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:22,992] INFO [Controller id=0 epoch=3] Sending LeaderAndIsr request to broker 0 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-21 11:55:22,992] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet(0) for 1 partitions (state.change.logger)
[2023-04-21 11:55:22,993] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-21 11:55:22,995] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 for 1 partitions (state.change.logger)
[2023-04-21 11:55:23,000] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 0 epoch 3 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-04-21 11:55:23,026] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-22 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,026] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-30 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,026] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-25 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,026] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-35 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,026] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-37 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,026] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-38 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,026] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-13 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,026] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-8 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,026] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-21 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,026] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-4 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,026] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-27 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,026] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-7 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,026] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-9 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,026] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-46 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,026] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-41 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,026] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-33 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,026] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-23 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,026] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-49 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,027] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-47 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,027] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-16 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,027] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-28 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,027] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-31 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,027] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-36 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,027] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-42 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,027] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-3 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,027] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-18 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,027] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-15 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,027] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-24 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,027] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-17 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,027] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-48 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,027] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-19 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,027] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-11 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,027] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-2 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,027] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-43 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,028] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-6 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,028] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-14 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,028] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-20 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,028] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-0 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,028] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-44 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,028] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-39 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,028] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-12 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,028] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-45 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,028] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-1 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,028] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-5 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,028] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-26 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,028] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-29 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,028] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-34 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,028] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-10 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,028] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-32 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,029] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-40 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 11:55:23,029] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-21 11:55:23,031] INFO [Broker id=0] Leader --quickstart-events-0 with topic id Some(D79WoMq8SYqFCfMbdvOEzA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,032] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-21 11:55:23,040] INFO [Broker id=0] Finished LeaderAndIsr request in 45ms correlationId 3 from controller 0 for 1 partitions (state.change.logger)
[2023-04-21 11:55:23,043] INFO [Broker id=0] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 4 (state.change.logger)
[2023-04-21 11:55:23,253] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-22 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,253] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-30 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,253] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-25 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,253] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-35 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,253] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-37 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,253] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-38 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,253] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-13 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,253] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-8 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,253] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-21 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,255] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,255] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-27 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,255] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-7 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,255] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-9 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,255] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-46 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,255] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-41 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,255] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-33 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,255] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-23 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,255] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-49 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,255] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-47 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,255] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-16 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,255] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-28 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,255] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-31 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,255] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-36 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,255] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-42 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,255] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,255] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-18 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,255] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-15 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,255] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-24 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,256] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-17 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,256] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-48 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,256] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-19 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,256] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-11 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,256] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,256] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-43 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,256] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-6 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,256] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-14 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,256] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-20 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,256] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,256] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-44 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,256] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-39 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,256] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-12 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,256] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-45 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,256] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,256] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-5 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,256] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-26 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,257] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-29 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,257] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-34 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,257] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-10 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,257] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-32 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,257] INFO [Controller id=0 epoch=3] Changed partition __consumer_offsets-40 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 11:55:23,257] INFO [Controller id=0 epoch=3] Sending LeaderAndIsr request to broker 0 with 50 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-21 11:55:23,258] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet(0) for 50 partitions (state.change.logger)
[2023-04-21 11:55:23,261] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 5 from controller 0 for 50 partitions (state.change.logger)
[2023-04-21 11:55:23,263] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-21 11:55:23,376] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 0 epoch 3 as part of the become-leader transition for 50 partitions (state.change.logger)
[2023-04-21 11:55:23,408] INFO [Broker id=0] Leader __consumer_offsets-3 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,430] INFO [Broker id=0] Leader __consumer_offsets-18 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,452] INFO [Broker id=0] Leader __consumer_offsets-41 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,475] INFO [Broker id=0] Leader __consumer_offsets-10 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,495] INFO [Broker id=0] Leader __consumer_offsets-33 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,519] INFO [Broker id=0] Leader __consumer_offsets-48 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,540] INFO [Broker id=0] Leader __consumer_offsets-19 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,569] INFO [Broker id=0] Leader __consumer_offsets-34 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,601] INFO [Broker id=0] Leader __consumer_offsets-4 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,627] INFO [Broker id=0] Leader __consumer_offsets-11 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,655] INFO [Broker id=0] Leader __consumer_offsets-26 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,682] INFO [Broker id=0] Leader __consumer_offsets-49 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,708] INFO [Broker id=0] Leader __consumer_offsets-39 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,736] INFO [Broker id=0] Leader __consumer_offsets-9 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,763] INFO [Broker id=0] Leader __consumer_offsets-24 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,793] INFO [Broker id=0] Leader __consumer_offsets-31 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,822] INFO [Broker id=0] Leader __consumer_offsets-46 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,850] INFO [Broker id=0] Leader __consumer_offsets-1 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,878] INFO [Broker id=0] Leader __consumer_offsets-16 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,910] INFO [Broker id=0] Leader __consumer_offsets-2 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,938] INFO [Broker id=0] Leader __consumer_offsets-25 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,971] INFO [Broker id=0] Leader __consumer_offsets-40 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:23,999] INFO [Broker id=0] Leader __consumer_offsets-47 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:24,037] INFO [Broker id=0] Leader __consumer_offsets-17 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:24,065] INFO [Broker id=0] Leader __consumer_offsets-32 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:24,095] INFO [Broker id=0] Leader __consumer_offsets-37 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:24,124] INFO [Broker id=0] Leader __consumer_offsets-7 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:24,150] INFO [Broker id=0] Leader __consumer_offsets-22 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:24,179] INFO [Broker id=0] Leader __consumer_offsets-29 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:24,206] INFO [Broker id=0] Leader __consumer_offsets-44 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:24,234] INFO [Broker id=0] Leader __consumer_offsets-14 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:24,269] INFO [Broker id=0] Leader __consumer_offsets-23 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:24,304] INFO [Broker id=0] Leader __consumer_offsets-38 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:24,338] INFO [Broker id=0] Leader __consumer_offsets-8 with topic id Some(YiEjpeqITfq9kuCIOq0IUw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-21 11:55:24,592] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-3 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,594] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-18 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,597] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-41 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,599] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-10 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,601] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-33 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,603] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-48 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,605] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-19 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,607] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-34 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,608] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-4 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,609] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-11 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,611] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-26 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,612] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-49 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,613] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-39 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,619] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-9 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,621] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-24 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,623] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-31 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,624] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-46 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,625] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-1 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,627] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-16 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,629] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-2 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,630] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-25 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,632] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-40 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,635] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-47 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,637] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-17 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,638] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-32 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,639] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-37 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,641] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-7 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,643] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-22 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,645] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-29 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,646] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-44 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,648] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-14 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,649] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-23 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,651] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-38 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,652] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-8 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,653] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-45 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,654] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-15 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,655] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-30 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,656] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-0 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,657] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-35 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,658] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-5 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,658] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-20 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,659] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-27 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,660] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-42 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,661] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-12 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,662] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-21 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,663] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-36 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,667] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-6 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,669] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-43 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,670] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-13 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,671] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 5 received from controller 0 epoch 3 for partition __consumer_offsets-28 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 11:55:24,723] ERROR [Controller id=0] Received error UNKNOWN_SERVER_ERROR in LeaderAndIsr response LeaderAndIsrResponseData(errorCode=-1, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=YiEjpeqITfq9kuCIOq0IUw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=13, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=46, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=9, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=42, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=21, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=17, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=30, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=26, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=5, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=38, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=1, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=34, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=16, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=45, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=12, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=41, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=24, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=20, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=49, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=29, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=25, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=8, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=37, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=4, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=33, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=15, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=48, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=11, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=44, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=23, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=19, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=32, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=28, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=7, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=40, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=3, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=36, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=47, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=14, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=43, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=10, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=22, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=18, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=31, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=27, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=39, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=6, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=35, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=2, errorCode=-1)])]) from broker 0 (state.change.logger)
[2023-04-21 11:55:24,728] INFO [Broker id=0] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 6 (state.change.logger)
[2023-04-21 15:02:32,260] INFO [Controller id=0 epoch=4] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-21 15:02:32,568] INFO [Controller id=0 epoch=4] Sending LeaderAndIsr request to broker 0 with 52 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-21 15:02:32,568] INFO [Controller id=0 epoch=4] Sending UpdateMetadata request to brokers HashSet(0) for 52 partitions (state.change.logger)
[2023-04-21 15:02:32,571] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 for 52 partitions (state.change.logger)
[2023-04-21 15:02:32,573] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition quickstart-events-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,573] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition --quickstart-events-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,574] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-46 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,574] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-9 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,574] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-17 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,574] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-26 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,574] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-38 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,574] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-1 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,574] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-34 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,574] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-16 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,574] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-41 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,574] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-24 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,575] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-49 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,575] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-29 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,575] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-25 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,575] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-8 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,575] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-37 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,575] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-4 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,575] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-33 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,575] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-48 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,575] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-11 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,576] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-44 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,576] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-23 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,576] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-19 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,576] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-32 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,577] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-7 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,578] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-40 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,581] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-3 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,586] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-47 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,586] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-14 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,586] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-10 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,586] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-22 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,586] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-18 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,586] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-31 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,586] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-39 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,586] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition __consumer_offsets-2 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 15:02:32,658] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 0 epoch 4 as part of the become-leader transition for 16 partitions (state.change.logger)
[2023-04-21 15:02:33,090] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 4 for partition __consumer_offsets-35 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 15:02:33,092] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 4 for partition __consumer_offsets-5 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 15:02:33,093] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 4 for partition __consumer_offsets-20 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 15:02:33,094] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 4 for partition __consumer_offsets-27 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 15:02:33,095] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 4 for partition __consumer_offsets-42 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 15:02:33,095] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 4 for partition __consumer_offsets-12 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 15:02:33,096] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 4 for partition __consumer_offsets-21 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 15:02:33,097] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 4 for partition __consumer_offsets-36 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 15:02:33,099] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 4 for partition __consumer_offsets-6 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 15:02:33,100] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 4 for partition __consumer_offsets-43 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 15:02:33,101] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 4 for partition __consumer_offsets-13 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 15:02:33,102] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 4 for partition __consumer_offsets-45 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 15:02:33,103] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 4 for partition __consumer_offsets-28 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 15:02:33,103] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 4 for partition __consumer_offsets-15 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 15:02:33,104] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 4 for partition __consumer_offsets-30 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 15:02:33,105] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 4 for partition __consumer_offsets-0 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 15:02:33,168] ERROR [Controller id=0] Received error UNKNOWN_SERVER_ERROR in LeaderAndIsr response LeaderAndIsrResponseData(errorCode=-1, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=i7vwjRyZTie5zpGd0shesw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=-1)]), LeaderAndIsrTopicError(topicId=D79WoMq8SYqFCfMbdvOEzA, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=-1)]), LeaderAndIsrTopicError(topicId=YiEjpeqITfq9kuCIOq0IUw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=13, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=46, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=9, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=42, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=21, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=17, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=30, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=26, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=5, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=38, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=1, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=34, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=16, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=45, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=12, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=41, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=24, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=20, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=49, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=29, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=25, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=8, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=37, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=4, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=33, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=15, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=48, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=11, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=44, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=23, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=19, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=32, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=28, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=7, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=40, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=3, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=36, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=47, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=14, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=43, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=10, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=22, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=18, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=31, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=27, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=39, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=6, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=35, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=2, errorCode=-1)])]) from broker 0 (state.change.logger)
[2023-04-21 15:02:33,170] INFO [Broker id=0] Add 52 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2023-04-21 16:04:15,833] INFO [Controller id=0 epoch=5] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-21 16:04:16,022] INFO [Controller id=0 epoch=5] Sending LeaderAndIsr request to broker 0 with 52 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-21 16:04:16,022] INFO [Controller id=0 epoch=5] Sending UpdateMetadata request to brokers HashSet(0) for 52 partitions (state.change.logger)
[2023-04-21 16:04:16,024] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 for 52 partitions (state.change.logger)
[2023-04-21 16:04:16,024] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition quickstart-events-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,025] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition --quickstart-events-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,025] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-46 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,025] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-9 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,025] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-17 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,025] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-26 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,025] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-38 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,025] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-1 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,025] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-34 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,025] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-16 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,026] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-41 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,026] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-24 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,026] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-49 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,026] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-29 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,026] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-25 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,026] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-8 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,026] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-37 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,026] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-4 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,026] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-33 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,026] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-48 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,026] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-11 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,026] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-44 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,026] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-23 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,026] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-19 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,026] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-32 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,027] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-7 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,027] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-40 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,027] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-3 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,027] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-47 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,027] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-14 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,027] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-10 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,027] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-22 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,027] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-18 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,027] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-31 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,027] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-39 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,027] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-2 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 16:04:16,047] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 0 epoch 5 as part of the become-leader transition for 16 partitions (state.change.logger)
[2023-04-21 16:04:16,350] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 5 for partition __consumer_offsets-35 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.TimeIndex.<init>(TimeIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forTime$1(LazyIndex.scala:109)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.timeIndex(LogSegment.scala:68)
	at kafka.log.LogSegment.sanityCheck(LogSegment.scala:86)
	at kafka.log.LogLoader.$anonfun$loadSegmentFiles$3(LogLoader.scala:329)
	at scala.collection.ArrayOps$WithFilter.foreach(ArrayOps.scala:73)
	at kafka.log.LogLoader.loadSegmentFiles(LogLoader.scala:309)
	at kafka.log.LogLoader.$anonfun$load$10(LogLoader.scala:160)
	at kafka.log.LogLoader.load(LogLoader.scala:277)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 16:04:16,351] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 5 for partition __consumer_offsets-5 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.TimeIndex.<init>(TimeIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forTime$1(LazyIndex.scala:109)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.timeIndex(LogSegment.scala:68)
	at kafka.log.LogSegment.sanityCheck(LogSegment.scala:86)
	at kafka.log.LogLoader.$anonfun$loadSegmentFiles$3(LogLoader.scala:329)
	at scala.collection.ArrayOps$WithFilter.foreach(ArrayOps.scala:73)
	at kafka.log.LogLoader.loadSegmentFiles(LogLoader.scala:309)
	at kafka.log.LogLoader.$anonfun$load$10(LogLoader.scala:160)
	at kafka.log.LogLoader.load(LogLoader.scala:277)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 16:04:16,352] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 5 for partition __consumer_offsets-20 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.TimeIndex.<init>(TimeIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forTime$1(LazyIndex.scala:109)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.timeIndex(LogSegment.scala:68)
	at kafka.log.LogSegment.sanityCheck(LogSegment.scala:86)
	at kafka.log.LogLoader.$anonfun$loadSegmentFiles$3(LogLoader.scala:329)
	at scala.collection.ArrayOps$WithFilter.foreach(ArrayOps.scala:73)
	at kafka.log.LogLoader.loadSegmentFiles(LogLoader.scala:309)
	at kafka.log.LogLoader.$anonfun$load$10(LogLoader.scala:160)
	at kafka.log.LogLoader.load(LogLoader.scala:277)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 16:04:16,352] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 5 for partition __consumer_offsets-27 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.TimeIndex.<init>(TimeIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forTime$1(LazyIndex.scala:109)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.timeIndex(LogSegment.scala:68)
	at kafka.log.LogSegment.sanityCheck(LogSegment.scala:86)
	at kafka.log.LogLoader.$anonfun$loadSegmentFiles$3(LogLoader.scala:329)
	at scala.collection.ArrayOps$WithFilter.foreach(ArrayOps.scala:73)
	at kafka.log.LogLoader.loadSegmentFiles(LogLoader.scala:309)
	at kafka.log.LogLoader.$anonfun$load$10(LogLoader.scala:160)
	at kafka.log.LogLoader.load(LogLoader.scala:277)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 16:04:16,355] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 5 for partition __consumer_offsets-42 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.TimeIndex.<init>(TimeIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forTime$1(LazyIndex.scala:109)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.timeIndex(LogSegment.scala:68)
	at kafka.log.LogSegment.sanityCheck(LogSegment.scala:86)
	at kafka.log.LogLoader.$anonfun$loadSegmentFiles$3(LogLoader.scala:329)
	at scala.collection.ArrayOps$WithFilter.foreach(ArrayOps.scala:73)
	at kafka.log.LogLoader.loadSegmentFiles(LogLoader.scala:309)
	at kafka.log.LogLoader.$anonfun$load$10(LogLoader.scala:160)
	at kafka.log.LogLoader.load(LogLoader.scala:277)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 16:04:16,357] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 5 for partition __consumer_offsets-12 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.TimeIndex.<init>(TimeIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forTime$1(LazyIndex.scala:109)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.timeIndex(LogSegment.scala:68)
	at kafka.log.LogSegment.sanityCheck(LogSegment.scala:86)
	at kafka.log.LogLoader.$anonfun$loadSegmentFiles$3(LogLoader.scala:329)
	at scala.collection.ArrayOps$WithFilter.foreach(ArrayOps.scala:73)
	at kafka.log.LogLoader.loadSegmentFiles(LogLoader.scala:309)
	at kafka.log.LogLoader.$anonfun$load$10(LogLoader.scala:160)
	at kafka.log.LogLoader.load(LogLoader.scala:277)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 16:04:16,358] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 5 for partition __consumer_offsets-21 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.TimeIndex.<init>(TimeIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forTime$1(LazyIndex.scala:109)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.timeIndex(LogSegment.scala:68)
	at kafka.log.LogSegment.sanityCheck(LogSegment.scala:86)
	at kafka.log.LogLoader.$anonfun$loadSegmentFiles$3(LogLoader.scala:329)
	at scala.collection.ArrayOps$WithFilter.foreach(ArrayOps.scala:73)
	at kafka.log.LogLoader.loadSegmentFiles(LogLoader.scala:309)
	at kafka.log.LogLoader.$anonfun$load$10(LogLoader.scala:160)
	at kafka.log.LogLoader.load(LogLoader.scala:277)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 16:04:16,362] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 5 for partition __consumer_offsets-36 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.TimeIndex.<init>(TimeIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forTime$1(LazyIndex.scala:109)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.timeIndex(LogSegment.scala:68)
	at kafka.log.LogSegment.sanityCheck(LogSegment.scala:86)
	at kafka.log.LogLoader.$anonfun$loadSegmentFiles$3(LogLoader.scala:329)
	at scala.collection.ArrayOps$WithFilter.foreach(ArrayOps.scala:73)
	at kafka.log.LogLoader.loadSegmentFiles(LogLoader.scala:309)
	at kafka.log.LogLoader.$anonfun$load$10(LogLoader.scala:160)
	at kafka.log.LogLoader.load(LogLoader.scala:277)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 16:04:16,363] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 5 for partition __consumer_offsets-6 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.TimeIndex.<init>(TimeIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forTime$1(LazyIndex.scala:109)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.timeIndex(LogSegment.scala:68)
	at kafka.log.LogSegment.sanityCheck(LogSegment.scala:86)
	at kafka.log.LogLoader.$anonfun$loadSegmentFiles$3(LogLoader.scala:329)
	at scala.collection.ArrayOps$WithFilter.foreach(ArrayOps.scala:73)
	at kafka.log.LogLoader.loadSegmentFiles(LogLoader.scala:309)
	at kafka.log.LogLoader.$anonfun$load$10(LogLoader.scala:160)
	at kafka.log.LogLoader.load(LogLoader.scala:277)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 16:04:16,363] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 5 for partition __consumer_offsets-43 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.TimeIndex.<init>(TimeIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forTime$1(LazyIndex.scala:109)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.timeIndex(LogSegment.scala:68)
	at kafka.log.LogSegment.sanityCheck(LogSegment.scala:86)
	at kafka.log.LogLoader.$anonfun$loadSegmentFiles$3(LogLoader.scala:329)
	at scala.collection.ArrayOps$WithFilter.foreach(ArrayOps.scala:73)
	at kafka.log.LogLoader.loadSegmentFiles(LogLoader.scala:309)
	at kafka.log.LogLoader.$anonfun$load$10(LogLoader.scala:160)
	at kafka.log.LogLoader.load(LogLoader.scala:277)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 16:04:16,364] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 5 for partition __consumer_offsets-13 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.TimeIndex.<init>(TimeIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forTime$1(LazyIndex.scala:109)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.timeIndex(LogSegment.scala:68)
	at kafka.log.LogSegment.sanityCheck(LogSegment.scala:86)
	at kafka.log.LogLoader.$anonfun$loadSegmentFiles$3(LogLoader.scala:329)
	at scala.collection.ArrayOps$WithFilter.foreach(ArrayOps.scala:73)
	at kafka.log.LogLoader.loadSegmentFiles(LogLoader.scala:309)
	at kafka.log.LogLoader.$anonfun$load$10(LogLoader.scala:160)
	at kafka.log.LogLoader.load(LogLoader.scala:277)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 16:04:16,365] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 5 for partition __consumer_offsets-45 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.TimeIndex.<init>(TimeIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forTime$1(LazyIndex.scala:109)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.timeIndex(LogSegment.scala:68)
	at kafka.log.LogSegment.sanityCheck(LogSegment.scala:86)
	at kafka.log.LogLoader.$anonfun$loadSegmentFiles$3(LogLoader.scala:329)
	at scala.collection.ArrayOps$WithFilter.foreach(ArrayOps.scala:73)
	at kafka.log.LogLoader.loadSegmentFiles(LogLoader.scala:309)
	at kafka.log.LogLoader.$anonfun$load$10(LogLoader.scala:160)
	at kafka.log.LogLoader.load(LogLoader.scala:277)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 16:04:16,365] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 5 for partition __consumer_offsets-28 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.TimeIndex.<init>(TimeIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forTime$1(LazyIndex.scala:109)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.timeIndex(LogSegment.scala:68)
	at kafka.log.LogSegment.sanityCheck(LogSegment.scala:86)
	at kafka.log.LogLoader.$anonfun$loadSegmentFiles$3(LogLoader.scala:329)
	at scala.collection.ArrayOps$WithFilter.foreach(ArrayOps.scala:73)
	at kafka.log.LogLoader.loadSegmentFiles(LogLoader.scala:309)
	at kafka.log.LogLoader.$anonfun$load$10(LogLoader.scala:160)
	at kafka.log.LogLoader.load(LogLoader.scala:277)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 16:04:16,366] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 5 for partition __consumer_offsets-15 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.TimeIndex.<init>(TimeIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forTime$1(LazyIndex.scala:109)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.timeIndex(LogSegment.scala:68)
	at kafka.log.LogSegment.sanityCheck(LogSegment.scala:86)
	at kafka.log.LogLoader.$anonfun$loadSegmentFiles$3(LogLoader.scala:329)
	at scala.collection.ArrayOps$WithFilter.foreach(ArrayOps.scala:73)
	at kafka.log.LogLoader.loadSegmentFiles(LogLoader.scala:309)
	at kafka.log.LogLoader.$anonfun$load$10(LogLoader.scala:160)
	at kafka.log.LogLoader.load(LogLoader.scala:277)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 16:04:16,370] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 5 for partition __consumer_offsets-30 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.TimeIndex.<init>(TimeIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forTime$1(LazyIndex.scala:109)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.timeIndex(LogSegment.scala:68)
	at kafka.log.LogSegment.sanityCheck(LogSegment.scala:86)
	at kafka.log.LogLoader.$anonfun$loadSegmentFiles$3(LogLoader.scala:329)
	at scala.collection.ArrayOps$WithFilter.foreach(ArrayOps.scala:73)
	at kafka.log.LogLoader.loadSegmentFiles(LogLoader.scala:309)
	at kafka.log.LogLoader.$anonfun$load$10(LogLoader.scala:160)
	at kafka.log.LogLoader.load(LogLoader.scala:277)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 16:04:16,371] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 5 for partition __consumer_offsets-0 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.TimeIndex.<init>(TimeIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forTime$1(LazyIndex.scala:109)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.timeIndex(LogSegment.scala:68)
	at kafka.log.LogSegment.sanityCheck(LogSegment.scala:86)
	at kafka.log.LogLoader.$anonfun$loadSegmentFiles$3(LogLoader.scala:329)
	at scala.collection.ArrayOps$WithFilter.foreach(ArrayOps.scala:73)
	at kafka.log.LogLoader.loadSegmentFiles(LogLoader.scala:309)
	at kafka.log.LogLoader.$anonfun$load$10(LogLoader.scala:160)
	at kafka.log.LogLoader.load(LogLoader.scala:277)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 16:04:16,492] ERROR [Controller id=0] Received error UNKNOWN_SERVER_ERROR in LeaderAndIsr response LeaderAndIsrResponseData(errorCode=-1, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=i7vwjRyZTie5zpGd0shesw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=-1)]), LeaderAndIsrTopicError(topicId=D79WoMq8SYqFCfMbdvOEzA, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=-1)]), LeaderAndIsrTopicError(topicId=YiEjpeqITfq9kuCIOq0IUw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=13, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=46, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=9, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=42, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=21, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=17, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=30, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=26, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=5, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=38, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=1, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=34, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=16, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=45, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=12, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=41, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=24, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=20, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=49, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=29, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=25, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=8, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=37, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=4, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=33, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=15, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=48, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=11, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=44, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=23, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=19, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=32, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=28, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=7, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=40, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=3, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=36, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=47, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=14, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=43, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=10, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=22, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=18, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=31, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=27, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=39, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=6, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=35, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=2, errorCode=-1)])]) from broker 0 (state.change.logger)
[2023-04-21 16:04:16,493] INFO [Broker id=0] Add 52 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 5 with correlation id 2 (state.change.logger)
[2023-04-21 17:13:47,180] INFO [Controller id=0 epoch=6] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-21 17:13:47,713] INFO [Controller id=0 epoch=6] Sending LeaderAndIsr request to broker 0 with 52 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-21 17:13:47,714] INFO [Controller id=0 epoch=6] Sending UpdateMetadata request to brokers HashSet(0) for 52 partitions (state.change.logger)
[2023-04-21 17:13:47,721] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 for 52 partitions (state.change.logger)
[2023-04-21 17:13:47,756] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition quickstart-events-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,757] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition --quickstart-events-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,757] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-46 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,763] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-9 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,764] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-17 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,764] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-26 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,764] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-38 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,764] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-1 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,764] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-34 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,764] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-16 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,764] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-41 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,764] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-24 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,764] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-49 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,764] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-29 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,764] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-25 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,764] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-8 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,764] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-37 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,764] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-4 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,765] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-33 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,765] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-48 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,765] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-11 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,765] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-44 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,765] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-23 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,765] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-19 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,765] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-32 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,765] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-7 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,765] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-40 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,765] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-3 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,765] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-47 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,765] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-14 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,766] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-10 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,766] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-22 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,766] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-18 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,766] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-31 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,766] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-39 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,766] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition __consumer_offsets-2 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-21 17:13:47,906] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 0 epoch 6 as part of the become-leader transition for 16 partitions (state.change.logger)
[2023-04-21 17:13:48,736] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 6 for partition __consumer_offsets-35 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.deleteSegmentsIfLogStartGreaterThanLogEnd$1(LogLoader.scala:396)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:450)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2023-04-21 17:13:48,737] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 6 for partition __consumer_offsets-5 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.deleteSegmentsIfLogStartGreaterThanLogEnd$1(LogLoader.scala:396)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:450)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2023-04-21 17:13:48,739] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 6 for partition __consumer_offsets-20 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.deleteSegmentsIfLogStartGreaterThanLogEnd$1(LogLoader.scala:396)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:450)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2023-04-21 17:13:48,740] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 6 for partition __consumer_offsets-27 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.deleteSegmentsIfLogStartGreaterThanLogEnd$1(LogLoader.scala:396)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:450)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2023-04-21 17:13:48,740] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 6 for partition __consumer_offsets-42 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.deleteSegmentsIfLogStartGreaterThanLogEnd$1(LogLoader.scala:396)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:450)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2023-04-21 17:13:48,741] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 6 for partition __consumer_offsets-12 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.deleteSegmentsIfLogStartGreaterThanLogEnd$1(LogLoader.scala:396)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:450)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2023-04-21 17:13:48,742] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 6 for partition __consumer_offsets-21 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.deleteSegmentsIfLogStartGreaterThanLogEnd$1(LogLoader.scala:396)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:450)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2023-04-21 17:13:48,743] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 6 for partition __consumer_offsets-36 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.deleteSegmentsIfLogStartGreaterThanLogEnd$1(LogLoader.scala:396)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:450)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2023-04-21 17:13:48,744] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 6 for partition __consumer_offsets-6 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.deleteSegmentsIfLogStartGreaterThanLogEnd$1(LogLoader.scala:396)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:450)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2023-04-21 17:13:48,744] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 6 for partition __consumer_offsets-43 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.deleteSegmentsIfLogStartGreaterThanLogEnd$1(LogLoader.scala:396)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:450)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2023-04-21 17:13:48,745] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 6 for partition __consumer_offsets-13 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.deleteSegmentsIfLogStartGreaterThanLogEnd$1(LogLoader.scala:396)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:450)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2023-04-21 17:13:48,748] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 6 for partition __consumer_offsets-45 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.deleteSegmentsIfLogStartGreaterThanLogEnd$1(LogLoader.scala:396)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:450)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2023-04-21 17:13:48,749] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 6 for partition __consumer_offsets-28 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.deleteSegmentsIfLogStartGreaterThanLogEnd$1(LogLoader.scala:396)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:450)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2023-04-21 17:13:48,749] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 6 for partition __consumer_offsets-15 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.deleteSegmentsIfLogStartGreaterThanLogEnd$1(LogLoader.scala:396)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:450)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2023-04-21 17:13:48,750] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 6 for partition __consumer_offsets-30 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.deleteSegmentsIfLogStartGreaterThanLogEnd$1(LogLoader.scala:396)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:450)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2023-04-21 17:13:48,750] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 1 received from controller 0 epoch 6 for partition __consumer_offsets-0 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.deleteSegmentsIfLogStartGreaterThanLogEnd$1(LogLoader.scala:396)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:450)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 29 more
[2023-04-21 17:13:48,913] ERROR [Controller id=0] Received error UNKNOWN_SERVER_ERROR in LeaderAndIsr response LeaderAndIsrResponseData(errorCode=-1, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=i7vwjRyZTie5zpGd0shesw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=-1)]), LeaderAndIsrTopicError(topicId=D79WoMq8SYqFCfMbdvOEzA, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=-1)]), LeaderAndIsrTopicError(topicId=YiEjpeqITfq9kuCIOq0IUw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=13, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=46, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=9, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=42, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=21, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=17, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=30, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=26, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=5, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=38, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=1, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=34, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=16, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=45, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=12, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=41, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=24, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=20, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=49, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=29, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=25, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=8, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=37, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=4, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=33, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=15, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=48, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=11, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=44, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=23, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=19, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=32, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=28, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=7, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=40, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=3, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=36, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=47, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=14, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=43, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=10, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=22, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=18, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=31, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=27, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=39, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=6, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=35, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=2, errorCode=-1)])]) from broker 0 (state.change.logger)
[2023-04-21 17:13:48,916] INFO [Broker id=0] Add 52 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 6 with correlation id 2 (state.change.logger)
[2023-04-21 17:53:13,030] INFO [Controller id=0 epoch=6] Changed partition firstTopic-0 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 17:53:13,032] INFO [Controller id=0 epoch=6] Changed partition firstTopic-6 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 17:53:13,032] INFO [Controller id=0 epoch=6] Changed partition firstTopic-7 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 17:53:13,032] INFO [Controller id=0 epoch=6] Changed partition firstTopic-1 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 17:53:13,032] INFO [Controller id=0 epoch=6] Changed partition firstTopic-2 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 17:53:13,032] INFO [Controller id=0 epoch=6] Changed partition firstTopic-8 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 17:53:13,032] INFO [Controller id=0 epoch=6] Changed partition firstTopic-3 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 17:53:13,032] INFO [Controller id=0 epoch=6] Changed partition firstTopic-4 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 17:53:13,032] INFO [Controller id=0 epoch=6] Changed partition firstTopic-5 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 17:53:13,033] INFO [Controller id=0 epoch=6] Changed partition firstTopic-9 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-21 17:53:13,035] INFO [Controller id=0 epoch=6] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-21 17:53:13,036] INFO [Controller id=0 epoch=6] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-21 17:53:13,090] INFO [Controller id=0 epoch=6] Changed partition firstTopic-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 17:53:13,090] INFO [Controller id=0 epoch=6] Changed partition firstTopic-6 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 17:53:13,090] INFO [Controller id=0 epoch=6] Changed partition firstTopic-7 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 17:53:13,090] INFO [Controller id=0 epoch=6] Changed partition firstTopic-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 17:53:13,090] INFO [Controller id=0 epoch=6] Changed partition firstTopic-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 17:53:13,091] INFO [Controller id=0 epoch=6] Changed partition firstTopic-8 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 17:53:13,091] INFO [Controller id=0 epoch=6] Changed partition firstTopic-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 17:53:13,091] INFO [Controller id=0 epoch=6] Changed partition firstTopic-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 17:53:13,091] INFO [Controller id=0 epoch=6] Changed partition firstTopic-5 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 17:53:13,091] INFO [Controller id=0 epoch=6] Changed partition firstTopic-9 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-21 17:53:13,091] INFO [Controller id=0 epoch=6] Sending LeaderAndIsr request to broker 0 with 10 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-21 17:53:13,092] INFO [Controller id=0 epoch=6] Sending UpdateMetadata request to brokers HashSet(0) for 10 partitions (state.change.logger)
[2023-04-21 17:53:13,093] INFO [Controller id=0 epoch=6] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-21 17:53:13,104] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 for 10 partitions (state.change.logger)
[2023-04-21 17:53:13,133] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 0 epoch 6 as part of the become-leader transition for 10 partitions (state.change.logger)
[2023-04-21 17:53:13,508] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 3 received from controller 0 epoch 6 for partition firstTopic-1 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 17:53:13,509] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 3 received from controller 0 epoch 6 for partition firstTopic-0 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 17:53:13,510] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 3 received from controller 0 epoch 6 for partition firstTopic-7 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 17:53:13,511] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 3 received from controller 0 epoch 6 for partition firstTopic-6 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 17:53:13,512] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 3 received from controller 0 epoch 6 for partition firstTopic-9 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 17:53:13,513] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 3 received from controller 0 epoch 6 for partition firstTopic-8 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 17:53:13,514] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 3 received from controller 0 epoch 6 for partition firstTopic-3 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 17:53:13,515] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 3 received from controller 0 epoch 6 for partition firstTopic-2 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 17:53:13,516] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 3 received from controller 0 epoch 6 for partition firstTopic-5 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 17:53:13,516] ERROR [Broker id=0] Error while processing LeaderAndIsr request correlationId 3 received from controller 0 epoch 6 for partition firstTopic-4 (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at kafka.log.AbstractIndex.<init>(AbstractIndex.scala:124)
	at kafka.log.OffsetIndex.<init>(OffsetIndex.scala:54)
	at kafka.log.LazyIndex$.$anonfun$forOffset$1(LazyIndex.scala:106)
	at kafka.log.LazyIndex.$anonfun$get$1(LazyIndex.scala:63)
	at kafka.log.LazyIndex.get(LazyIndex.scala:60)
	at kafka.log.LogSegment.offsetIndex(LogSegment.scala:66)
	at kafka.log.LogSegment.readNextOffset(LogSegment.scala:455)
	at kafka.log.LogLoader.$anonfun$recoverLog$6(LogLoader.scala:474)
	at scala.runtime.java8.JFunction0$mcJ$sp.apply(JFunction0$mcJ$sp.scala:17)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:474)
	at kafka.log.LogLoader.load(LogLoader.scala:165)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:1853)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:946)
	at scala.Option.getOrElse(Option.scala:201)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:910)
	at kafka.cluster.Partition.createLog(Partition.scala:388)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:363)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:370)
	at kafka.cluster.Partition.$anonfun$makeLeader$1(Partition.scala:606)
	at kafka.cluster.Partition.makeLeader(Partition.scala:565)
	at kafka.server.ReplicaManager.$anonfun$makeLeaders$5(ReplicaManager.scala:1606)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.mutable.HashMap$Node.foreachEntry(HashMap.scala:633)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:499)
	at kafka.server.ReplicaManager.becomeLeaderOrFollower(ReplicaManager.scala:1604)
	at kafka.server.KafkaApis.handleLeaderAndIsrRequest(KafkaApis.scala:280)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:187)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:75)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 31 more
[2023-04-21 17:53:13,527] ERROR [Controller id=0] Received error UNKNOWN_SERVER_ERROR in LeaderAndIsr response LeaderAndIsrResponseData(errorCode=-1, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=eHNWIPrgQP-r5GBYwd_fAw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=3, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=4, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=1, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=2, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=7, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=8, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=5, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=6, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=9, errorCode=-1), LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=-1)])]) from broker 0 (state.change.logger)
[2023-04-21 17:53:13,528] INFO [Broker id=0] Add 10 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 6 with correlation id 4 (state.change.logger)
