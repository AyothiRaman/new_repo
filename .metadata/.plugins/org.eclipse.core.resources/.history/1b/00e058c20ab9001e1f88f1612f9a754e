package practice;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

class Animals{
//	Animals hell() {
//		return new Animals();
//		
//	}
	
	int x=10;
	
	Animals(){
		
		System.out.println("jjj");
		
	}
	
	void hmm() {
		
		int m;
		
		System.out.println("this is super");
		
	}
}


class Dogs extends Animals{
	
//	Dogs hell() {
//		return new Dogs();
//	}
	
	Dogs(){
		System.out.println("ujdfdf"+ ""+  super.x);
	}
	
	void hmm() {
		
		
		super.hmm();
		
	}
}




interface Multiple{
	//int calc(int a, int b);
	
	void myMethod();
}



public class InputExample  {

	public static void main(String[] args)  {
		
		
		streamExample();
		
		Dogs jj = new Dogs();
		jj.hmm();
		
		
//		Animals dog = new Animals();
//		Object obj=dog;
//		System.out.println(obj.toString());
//		
		
		
		
//	
//		Multiple multi = (a,b)->a*b;
//		System.out.println(multi.calc(40, 70));
		
		Multiple multi = ()->{
			System.out.println("hello");
		};
		multi.myMethod();
		
		InputExample ex = new InputExample();
		ex.h(multi);
		
	}
	
	static void h(Multiple multi) {
		multi.myMethod();
	}
	
	
	
	public static void streamExample() {
	List<String> str=	Arrays.asList("jjj","jkdjsj","ejlkfjf");
	
	List<String> sm = str.stream().filter(s->s.startsWith("j")).collect(Collectors.toList());
	
	System.out.println(sm);
	//sm.forEach(System::println);
	
	
	}
	
	
	
	
	
	
	
	

}
